# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, BayesML Developers
# This file is distributed under the same license as the BayesML package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BayesML \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-21 23:58+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../bayesml.normal.rst:2
msgid "bayesml.normal package"
msgstr ""

#: ../../bayesml.normal.rst:7
msgid "Module contents"
msgstr ""

#: bayesml.normal:1 of
msgid "The normal distribution with the normaml-gamma prior distribution."
msgstr ""

#: bayesml.normal:3 of
msgid "The stochastic data generative model is as follows:"
msgstr ""

#: bayesml.normal:5 of
#, python-brace-format
msgid ":math:`x \\in \\mathbb{R}`: a data point"
msgstr ""

#: bayesml.normal:6 of
#, python-brace-format
msgid ":math:`\\mu \\in \\mathbb{R}`: a mean parameter"
msgstr ""

#: bayesml.normal:7 of
#, python-brace-format
msgid ":math:`\\tau \\in \\mathbb{R}_{>0}`: a precision parameter"
msgstr ""

#: bayesml.normal:9 of
msgid ""
"p(x | \\mu, \\tau) &= \\mathcal{N}(x|\\mu,\\tau^{-1})\\\\\n"
"&= \\sqrt{\\frac{\\tau}{2\\pi}} \\exp \\left\\{ "
"-\\frac{\\tau}{2}(x-\\mu)^2 \\right\\},\n"
"\n"
msgstr ""

#: bayesml.normal:14 of
#, python-brace-format
msgid ""
"&\\mathbb{E}[x | \\mu, \\tau] = \\mu, \\\\\n"
"&\\mathbb{V}[x | \\mu, \\tau] = \\tau^{-1}.\n"
"\n"
msgstr ""

#: bayesml.normal:19 of
msgid "The prior distribution is as follows:"
msgstr ""

#: bayesml.normal:21 of
#, python-brace-format
msgid ":math:`m_0 \\in \\mathbb{R}`: a hyperparameter"
msgstr ""

#: bayesml.normal:22 of
#, python-brace-format
msgid ":math:`\\kappa_0 \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.normal:23 of
#, python-brace-format
msgid ":math:`\\alpha_0 \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.normal:24 of
#, python-brace-format
msgid ":math:`\\beta_0 \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.normal:25 bayesml.normal:44 of
msgid ":math:`\\Gamma ( \\cdot )`: the gamma function"
msgstr ""

#: bayesml.normal:27 of
msgid ""
"p(\\mu, \\tau) &= \\mathcal{N}(\\mu|m_0,(\\kappa_0 \\tau)^{-1}) "
"\\mathrm{Gam}(\\tau | \\alpha_0, \\beta_0) \\\\\n"
"&= \\sqrt{\\frac{\\kappa_0 \\tau}{2\\pi}} \\exp \\left\\{ "
"-\\frac{\\kappa_0 \\tau}{2}(\\mu-m_0)^2 \\right\\} "
"\\frac{\\beta_0^{\\alpha_0}}{\\Gamma (\\alpha_0)} \\tau^{\\alpha_0 - 1} "
"\\exp \\{ -\\beta_0 \\tau \\},\n"
"\n"
msgstr ""

#: bayesml.normal:31 of
#, python-brace-format
msgid ""
"\\mathbb{E}[\\mu] &= m_0 & \\left( \\alpha_0 > \\frac{1}{2} \\right), "
"\\\\\n"
"\\mathbb{V}[\\mu] &= \\frac{\\beta_0}{\\kappa_0 (\\alpha_0 - 1)} & "
"(\\alpha_0 > 1), \\\\\n"
"\\mathbb{E}[\\tau] &= \\frac{\\alpha_0}{\\beta_0}, \\\\\n"
"\\mathbb{V}[\\tau] &= \\frac{\\alpha_0}{\\beta_0^2}.\n"
"\n"
msgstr ""

#: bayesml.normal:37 of
msgid "The posterior distribution is as follows:"
msgstr ""

#: bayesml.normal:39 of
#, python-brace-format
msgid ":math:`x^n = (x_1, x_2, \\dots , x_n) \\in \\mathbb{R}^n`: given data"
msgstr ""

#: bayesml.normal:40 of
#, python-brace-format
msgid ":math:`m_n \\in \\mathbb{R}`: a hyperparameter"
msgstr ""

#: bayesml.normal:41 of
#, python-brace-format
msgid ":math:`\\kappa_n \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.normal:42 of
#, python-brace-format
msgid ":math:`\\alpha_n \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.normal:43 of
#, python-brace-format
msgid ":math:`\\beta_n \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.normal:46 of
msgid ""
"p(\\mu, \\tau | x^n) &= \\mathcal{N}(\\mu|m_n,(\\kappa_n \\tau)^{-1}) "
"\\mathrm{Gam}(\\tau | \\alpha_n, \\beta_n) \\\\\n"
"&= \\sqrt{\\frac{\\kappa_n \\tau}{2\\pi}} \\exp \\left\\{ "
"-\\frac{\\kappa_n \\tau}{2}(\\mu-m_n)^2 \\right\\} "
"\\frac{\\beta_n^{\\alpha_n}}{\\Gamma (\\alpha_n)} \\tau^{\\alpha_n - 1} "
"\\exp \\{ -\\beta_n \\tau \\},\n"
"\n"
msgstr ""

#: bayesml.normal:50 of
#, python-brace-format
msgid ""
"\\mathbb{E}[\\mu | x^n] &= m_n & \\left( \\alpha_n > \\frac{1}{2} "
"\\right), \\\\\n"
"\\mathbb{V}[\\mu | x^n] &= \\frac{\\beta_n}{\\kappa_n (\\alpha_n - 1)} & "
"(\\alpha_n > 1), \\\\\n"
"\\mathbb{E}[\\tau | x^n] &= \\frac{\\alpha_n}{\\beta_n}, \\\\\n"
"\\mathbb{V}[\\tau | x^n] &= \\frac{\\alpha_n}{\\beta_n^2},\n"
"\n"
msgstr ""

#: bayesml.normal:56 of
msgid "where the updating rule of the hyperparameters is"
msgstr ""

#: bayesml.normal:58 of
msgid ""
"\\bar{x} &= \\frac{1}{n} \\sum_{i=1}^n x_i, \\\\\n"
"m_n &= \\frac{\\kappa_0 m_0 + n \\bar{x}}{\\kappa_0 + n}, \\\\\n"
"\\kappa_n &= \\kappa_0 + n, \\\\\n"
"\\alpha_n &= \\alpha_0 + \\frac{n}{2}, \\\\\n"
"\\beta_n &=  \\beta_0 + \\frac{1}{2} \\left( \\sum_{i=1}^n (x_i - "
"\\bar{x})^2 + \\frac{\\kappa_0 n}{\\kappa_0 + n} (\\bar{x} - m_0)^2 "
"\\right).\n"
"\n"
msgstr ""

#: bayesml.normal:65 of
msgid "The predictive distribution is as follows:"
msgstr ""

#: bayesml.normal:67 of
#, python-brace-format
msgid ":math:`x_{n+1} \\in \\mathbb{R}`: a new data point"
msgstr ""

#: bayesml.normal:68 of
#, python-brace-format
msgid ""
":math:`\\mu_\\mathrm{p} \\in \\mathbb{R}`: the hyperparameter of the "
"predictive distribution"
msgstr ""

#: bayesml.normal:69 of
#, python-brace-format
msgid ""
":math:`\\lambda_\\mathrm{p} \\in \\mathbb{R}_{>0}`: the hyperparameter of"
" the predictive distribution"
msgstr ""

#: bayesml.normal:70 of
#, python-brace-format
msgid ""
":math:`\\nu_\\mathrm{p} \\in \\mathbb{R}_{>0}`: the hyperparameter of the"
" predictive distribution"
msgstr ""

#: bayesml.normal:72 of
msgid ""
"p(x_{n+1} | x^{n} ) &= \\mathrm{St}(x_{n+1} | \\mu_\\mathrm{p}, "
"\\lambda_\\mathrm{p}, \\nu_\\mathrm{p}) \\\\\n"
"&= \\frac{\\Gamma (\\nu_\\mathrm{p} / 2 + 1/2 )}{\\Gamma "
"(\\nu_\\mathrm{p} / 2)} \\left( \\frac{\\lambda_\\mathrm{p}}{\\pi "
"\\nu_\\mathrm{p}} \\right)^{1/2} \\left( 1 + \\frac{\\lambda_\\mathrm{p} "
"(x_{n+1} - \\mu_\\mathrm{p})^2}{\\nu_\\mathrm{p}} "
"\\right)^{-\\nu_\\mathrm{p}/2 - 1/2},\n"
"\n"
msgstr ""

#: bayesml.normal:76 of
msgid ""
"\\mathbb{E}[x_{n+1} | x^n] &= \\mu_\\mathrm{p} & (\\nu_\\mathrm{p} > 1), "
"\\\\\n"
"\\mathbb{V}[x_{n+1} | x^n] &= \\frac{1}{\\lambda_\\mathrm{p}} "
"\\frac{\\nu_\\mathrm{p}}{\\nu_\\mathrm{p}-2} & (\\nu_\\mathrm{p} > 2),\n"
"\n"
msgstr ""

#: bayesml.normal:81 of
msgid ""
"where the parameters are obtained from the hyperparameters of the "
"posterior distribution as follows:"
msgstr ""

#: bayesml.normal:83 of
#, python-brace-format
msgid ""
"\\mu_\\mathrm{p} &= \\mu_n, \\\\\n"
"\\lambda_\\mathrm{p} &= \\frac{\\kappa_n}{\\kappa_n + 1} "
"\\frac{\\alpha_n}{\\beta_n}, \\\\\n"
"\\nu_\\mathrm{p} &= 2 \\alpha_n.\n"
"\n"
msgstr ""

#: bayesml.normal._normal.GenModel:1 of
msgid "Bases: :py:class:`~bayesml.base.Generative`"
msgstr ""

#: bayesml.normal._normal.GenModel:2 of
msgid "The stochastic data generative model and the prior distribution"
msgstr ""

#: bayesml.normal._normal.GenModel bayesml.normal._normal.GenModel.gen_sample
#: bayesml.normal._normal.GenModel.save_sample
#: bayesml.normal._normal.GenModel.set_h_params
#: bayesml.normal._normal.GenModel.set_params
#: bayesml.normal._normal.GenModel.visualize_model
#: bayesml.normal._normal.LearnModel
#: bayesml.normal._normal.LearnModel.estimate_interval
#: bayesml.normal._normal.LearnModel.estimate_params
#: bayesml.normal._normal.LearnModel.fit
#: bayesml.normal._normal.LearnModel.make_prediction
#: bayesml.normal._normal.LearnModel.pred_and_update
#: bayesml.normal._normal.LearnModel.set_h0_params
#: bayesml.normal._normal.LearnModel.set_hn_params
#: bayesml.normal._normal.LearnModel.update_posterior of
msgid "Parameters"
msgstr ""

#: bayesml.normal._normal.GenModel:7
#: bayesml.normal._normal.GenModel.set_params:7 of
msgid "**mu**"
msgstr ""

#: bayesml.normal._normal.GenModel:-1
#: bayesml.normal._normal.GenModel.set_h_params:-1
#: bayesml.normal._normal.GenModel.set_params:-1
#: bayesml.normal._normal.GenModel.visualize_model:-1
#: bayesml.normal._normal.LearnModel:-1
#: bayesml.normal._normal.LearnModel.estimate_interval:-1
#: bayesml.normal._normal.LearnModel.set_h0_params:-1
#: bayesml.normal._normal.LearnModel.set_hn_params:-1 of
msgid "float, optional"
msgstr ""

#: bayesml.normal._normal.GenModel:8 bayesml.normal._normal.GenModel:14
#: bayesml.normal._normal.LearnModel:8 of
msgid "a real number, by default 0.0"
msgstr ""

#: bayesml.normal._normal.GenModel:10
#: bayesml.normal._normal.GenModel.set_params:10 of
msgid "**tau**"
msgstr ""

#: bayesml.normal._normal.GenModel:11 bayesml.normal._normal.GenModel:17
#: bayesml.normal._normal.GenModel:20 bayesml.normal._normal.GenModel:23
#: bayesml.normal._normal.LearnModel:11 bayesml.normal._normal.LearnModel:14
#: bayesml.normal._normal.LearnModel:17 of
msgid "a positive real number, by default 1.0"
msgstr ""

#: bayesml.normal._normal.GenModel:13
#: bayesml.normal._normal.GenModel.set_h_params:7 of
msgid "**h_m**"
msgstr ""

#: bayesml.normal._normal.GenModel:16
#: bayesml.normal._normal.GenModel.set_h_params:10 of
msgid "**h_kappa**"
msgstr ""

#: bayesml.normal._normal.GenModel:19
#: bayesml.normal._normal.GenModel.set_h_params:13 of
msgid "**h_alpha**"
msgstr ""

#: bayesml.normal._normal.GenModel:22
#: bayesml.normal._normal.GenModel.set_h_params:16 of
msgid "**h_beta**"
msgstr ""

#: bayesml.normal._normal.GenModel:25 of
msgid "**seed**"
msgstr ""

#: bayesml.normal._normal.GenModel:-1 of
#, python-brace-format
msgid "{None, int}, optional"
msgstr ""

#: bayesml.normal._normal.GenModel:26 of
msgid "A seed to initialize numpy.random.default_rng(), by default None"
msgstr ""

#: bayesml.normal._normal.GenModel:31 bayesml.normal._normal.LearnModel:43 of
msgid "Methods"
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ":py:obj:`gen_params <bayesml.normal.GenModel.gen_params>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.GenModel.gen_params:2
#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Generate the parameter from the prior distribution."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ""
":py:obj:`gen_sample <bayesml.normal.GenModel.gen_sample>`\\ "
"\\(sample\\_size\\)"
msgstr ""

#: bayesml.normal._normal.GenModel.gen_sample:2
#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Generate a sample from the stochastic data generative model."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ":py:obj:`get_constants <bayesml.normal.GenModel.get_constants>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.GenModel.get_constants:2
#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Get constants of GenModel."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ":py:obj:`get_h_params <bayesml.normal.GenModel.get_h_params>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.GenModel.get_h_params:2
#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Get the hyperparameters of the prior distribution."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ":py:obj:`get_params <bayesml.normal.GenModel.get_params>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.GenModel.get_params:2
#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Get the parameter of the sthocastic data generative model."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ""
":py:obj:`load_h_params <bayesml.normal.GenModel.load_h_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Load the hyperparameters to h_params."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ""
":py:obj:`load_params <bayesml.normal.GenModel.load_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Load the parameters saved by ``save_params``."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ""
":py:obj:`save_h_params <bayesml.normal.GenModel.save_h_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Save the hyperparameters using python ``pickle`` module."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ""
":py:obj:`save_params <bayesml.normal.GenModel.save_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Save the parameters using python ``pickle`` module."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ""
":py:obj:`save_sample <bayesml.normal.GenModel.save_sample>`\\ "
"\\(filename\\, sample\\_size\\)"
msgstr ""

#: bayesml.normal._normal.GenModel.save_sample:2
#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Save the generated sample as NumPy ``.npz`` format."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ""
":py:obj:`set_h_params <bayesml.normal.GenModel.set_h_params>`\\ "
"\\(\\[h\\_m\\, h\\_kappa\\, h\\_alpha\\, h\\_beta\\]\\)"
msgstr ""

#: bayesml.normal._normal.GenModel.set_h_params:2
#: bayesml.normal._normal.GenModel:59:<autosummary>:1
#: bayesml.normal._normal.LearnModel.set_h0_params:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Set the hyperparameters of the prior distribution."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ""
":py:obj:`set_params <bayesml.normal.GenModel.set_params>`\\ \\(\\[mu\\, "
"tau\\]\\)"
msgstr ""

#: bayesml.normal._normal.GenModel.set_params:2
#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Set the parameter of the sthocastic data generative model."
msgstr ""

#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid ""
":py:obj:`visualize_model <bayesml.normal.GenModel.visualize_model>`\\ "
"\\(\\[sample\\_size\\, hist\\_bins\\]\\)"
msgstr ""

#: bayesml.normal._normal.GenModel.visualize_model:2
#: bayesml.normal._normal.GenModel:59:<autosummary>:1 of
msgid "Visualize the stochastic data generative model and generated samples."
msgstr ""

#: bayesml.normal._normal.GenModel.get_constants:4
#: bayesml.normal._normal.LearnModel.get_constants:4 of
#, python-brace-format
msgid ""
"This model does not have any constants.  Therefore, this function returns"
" an emtpy dict ``{}``."
msgstr ""

#: bayesml.normal._normal.GenModel.gen_sample
#: bayesml.normal._normal.GenModel.get_constants
#: bayesml.normal._normal.GenModel.get_h_params
#: bayesml.normal._normal.GenModel.get_params
#: bayesml.normal._normal.LearnModel.calc_log_marginal_likelihood
#: bayesml.normal._normal.LearnModel.calc_pred_var
#: bayesml.normal._normal.LearnModel.estimate_interval
#: bayesml.normal._normal.LearnModel.estimate_params
#: bayesml.normal._normal.LearnModel.fit
#: bayesml.normal._normal.LearnModel.get_constants
#: bayesml.normal._normal.LearnModel.get_h0_params
#: bayesml.normal._normal.LearnModel.get_hn_params
#: bayesml.normal._normal.LearnModel.get_p_params
#: bayesml.normal._normal.LearnModel.make_prediction
#: bayesml.normal._normal.LearnModel.pred_and_update
#: bayesml.normal._normal.LearnModel.predict of
msgid "Returns"
msgstr ""

#: bayesml.normal._normal.GenModel.get_constants:12
#: bayesml.normal._normal.LearnModel.get_constants:12 of
msgid "**constants**"
msgstr ""

#: bayesml.normal._normal.GenModel.get_constants:-1
#: bayesml.normal._normal.LearnModel.get_constants:-1 of
msgid "an empty dict"
msgstr ""

#: bayesml.normal._normal.GenModel.set_h_params:8
#: bayesml.normal._normal.LearnModel.set_h0_params:8
#: bayesml.normal._normal.LearnModel.set_hn_params:8 of
msgid "a real number, by default None"
msgstr ""

#: bayesml.normal._normal.GenModel.set_h_params:11
#: bayesml.normal._normal.GenModel.set_h_params:14
#: bayesml.normal._normal.GenModel.set_h_params:17
#: bayesml.normal._normal.LearnModel.set_h0_params:11
#: bayesml.normal._normal.LearnModel.set_h0_params:14
#: bayesml.normal._normal.LearnModel.set_h0_params:17
#: bayesml.normal._normal.LearnModel.set_hn_params:11
#: bayesml.normal._normal.LearnModel.set_hn_params:14
#: bayesml.normal._normal.LearnModel.set_hn_params:17 of
msgid "a positive real number, by default None"
msgstr ""

#: bayesml.normal._normal.GenModel.get_h_params:10 of
msgid "**h_params**"
msgstr ""

#: bayesml.normal._normal.GenModel.get_h_params:-1
#: bayesml.normal._normal.LearnModel.get_h0_params:-1
#: bayesml.normal._normal.LearnModel.get_hn_params:-1
#: bayesml.normal._normal.LearnModel.get_p_params:-1 of
#, python-brace-format
msgid "dict of {str: float}"
msgstr ""

#: bayesml.normal._normal.GenModel.get_h_params:11 of
msgid "``\"h_m\"`` : The value of ``self.h_m``"
msgstr ""

#: bayesml.normal._normal.GenModel.get_h_params:12 of
msgid "``\"h_kappa\"`` : The value of ``self.h_kappa``"
msgstr ""

#: bayesml.normal._normal.GenModel.get_h_params:13 of
msgid "``\"h_alpha\"`` : The value of ``self.h_alpha``"
msgstr ""

#: bayesml.normal._normal.GenModel.get_h_params:14 of
msgid "``\"h_beta\"`` : The value of ``self.h_beta``"
msgstr ""

#: bayesml.normal._normal.GenModel.gen_params:4 of
msgid "The generated vaule is set at ``self.mu`` and ``self.tau``."
msgstr ""

#: bayesml.normal._normal.GenModel.set_params:8 of
#, python-brace-format
msgid "a real number :math:`mu \\in \\mathbb{R}`, by default None."
msgstr ""

#: bayesml.normal._normal.GenModel.set_params:11 of
msgid "a positive real number, by default None."
msgstr ""

#: bayesml.normal._normal.GenModel.get_params:10 of
msgid "**params**"
msgstr ""

#: bayesml.normal._normal.GenModel.get_params:-1 of
#, python-brace-format
msgid "dict of {str:float}"
msgstr ""

#: bayesml.normal._normal.GenModel.get_params:11 of
msgid "``\"mu\"`` : The value of ``self.mu``"
msgstr ""

#: bayesml.normal._normal.GenModel.get_params:12 of
msgid "``\"tau\"`` : The value of ``self.tau``"
msgstr ""

#: bayesml.normal._normal.GenModel.gen_sample:7
#: bayesml.normal._normal.GenModel.save_sample:12
#: bayesml.normal._normal.GenModel.visualize_model:7 of
msgid "**sample_size**"
msgstr ""

#: bayesml.normal._normal.GenModel.gen_sample:-1
#: bayesml.normal._normal.GenModel.save_sample:-1 of
msgid "int"
msgstr ""

#: bayesml.normal._normal.GenModel.gen_sample:8
#: bayesml.normal._normal.GenModel.save_sample:13 of
msgid "A positive integer"
msgstr ""

#: bayesml.normal._normal.GenModel.gen_sample:14
#: bayesml.normal._normal.LearnModel.fit:12
#: bayesml.normal._normal.LearnModel.pred_and_update:7
#: bayesml.normal._normal.LearnModel.update_posterior:7 of
msgid "**x**"
msgstr ""

#: bayesml.normal._normal.GenModel.gen_sample:-1 of
msgid "numpy ndarray"
msgstr ""

#: bayesml.normal._normal.GenModel.gen_sample:15 of
msgid "1 dimensional array whose size is ``sammple_size``."
msgstr ""

#: bayesml.normal._normal.GenModel.save_sample:4 of
msgid "It is saved as a NpzFile with keyword: \"x\"."
msgstr ""

#: bayesml.normal._normal.GenModel.save_sample:8 of
msgid "**filename**"
msgstr ""

#: bayesml.normal._normal.GenModel.save_sample:-1 of
msgid "str"
msgstr ""

#: bayesml.normal._normal.GenModel.save_sample:9 of
msgid ""
"The filename to which the sample is saved. ``.npz`` will be appended if "
"it isn't there."
msgstr ""

#: bayesml.normal._normal.GenModel.save_sample:27 of
msgid ":obj:`numpy.savez_compressed`"
msgstr ""

#: bayesml.normal._normal.GenModel.visualize_model:-1 of
msgid "int, optional"
msgstr ""

#: bayesml.normal._normal.GenModel.visualize_model:8 of
msgid "A positive integer, by default 1000"
msgstr ""

#: bayesml.normal._normal.GenModel.visualize_model:10 of
msgid "**hist_bins**"
msgstr ""

#: bayesml.normal._normal.GenModel.visualize_model:11 of
msgid "A positive float, by default 10"
msgstr ""

#: bayesml.normal._normal.GenModel.visualize_model:26
#: bayesml.normal._normal.LearnModel.visualize_posterior:19 of
msgid "Examples"
msgstr ""

#: bayesml.normal._normal.LearnModel:1 of
msgid ""
"Bases: :py:class:`~bayesml.base.Posterior`, "
":py:class:`~bayesml.base.PredictiveMixin`"
msgstr ""

#: bayesml.normal._normal.LearnModel:2 of
msgid "The posterior distribution and the predictive distribution."
msgstr ""

#: bayesml.normal._normal.LearnModel:7
#: bayesml.normal._normal.LearnModel.set_h0_params:7 of
msgid "**h0_m**"
msgstr ""

#: bayesml.normal._normal.LearnModel:10
#: bayesml.normal._normal.LearnModel.set_h0_params:10 of
msgid "**h0_kappa**"
msgstr ""

#: bayesml.normal._normal.LearnModel:13
#: bayesml.normal._normal.LearnModel.set_h0_params:13 of
msgid "**h0_alpha**"
msgstr ""

#: bayesml.normal._normal.LearnModel:16
#: bayesml.normal._normal.LearnModel.set_h0_params:16 of
msgid "**h0_beta**"
msgstr ""

#: bayesml.normal._normal.LearnModel of
msgid "Attributes"
msgstr ""

#: bayesml.normal._normal.LearnModel:21
#: bayesml.normal._normal.LearnModel.set_hn_params:7 of
msgid "**hn_m**"
msgstr ""

#: bayesml.normal._normal.LearnModel:-1
#: bayesml.normal._normal.LearnModel.calc_log_marginal_likelihood:-1
#: bayesml.normal._normal.LearnModel.calc_pred_var:-1
#: bayesml.normal._normal.LearnModel.pred_and_update:-1
#: bayesml.normal._normal.LearnModel.predict:-1 of
msgid "float"
msgstr ""

#: bayesml.normal._normal.LearnModel:22 bayesml.normal._normal.LearnModel:34 of
msgid "a real number"
msgstr ""

#: bayesml.normal._normal.LearnModel:24
#: bayesml.normal._normal.LearnModel.set_hn_params:10 of
msgid "**hn_kappa**"
msgstr ""

#: bayesml.normal._normal.LearnModel:25 bayesml.normal._normal.LearnModel:28
#: bayesml.normal._normal.LearnModel:31 bayesml.normal._normal.LearnModel:37
#: bayesml.normal._normal.LearnModel:40 of
msgid "a positive real number"
msgstr ""

#: bayesml.normal._normal.LearnModel:27
#: bayesml.normal._normal.LearnModel.set_hn_params:13 of
msgid "**hn_alpha**"
msgstr ""

#: bayesml.normal._normal.LearnModel:30
#: bayesml.normal._normal.LearnModel.set_hn_params:16 of
msgid "**hn_beta**"
msgstr ""

#: bayesml.normal._normal.LearnModel:33 of
msgid "**p_mu**"
msgstr ""

#: bayesml.normal._normal.LearnModel:36 of
msgid "**p_lambda**"
msgstr ""

#: bayesml.normal._normal.LearnModel:39 of
msgid "**p_nu**"
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`calc_log_marginal_likelihood "
"<bayesml.normal.LearnModel.calc_log_marginal_likelihood>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.calc_log_marginal_likelihood:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Calculate log marginal likelihood"
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`calc_pred_dist <bayesml.normal.LearnModel.calc_pred_dist>`\\ "
"\\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.calc_pred_dist:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Calculate the parameters of the predictive distribution."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ":py:obj:`calc_pred_var <bayesml.normal.LearnModel.calc_pred_var>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.calc_pred_var:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Calculate the variance of the predictive distribution."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`estimate_interval "
"<bayesml.normal.LearnModel.estimate_interval>`\\ \\(\\[credibility\\]\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_interval:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Credible interval of the parameter."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`estimate_params <bayesml.normal.LearnModel.estimate_params>`\\ "
"\\(\\[loss\\, dict\\_out\\]\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
"Estimate the parameter of the stochastic data generative model under the "
"given criterion."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ":py:obj:`fit <bayesml.normal.LearnModel.fit>`\\ \\(x\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.fit:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Fit the model to the data."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ":py:obj:`get_constants <bayesml.normal.LearnModel.get_constants>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_constants:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Get constants of LearnModel."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ":py:obj:`get_h0_params <bayesml.normal.LearnModel.get_h0_params>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_h0_params:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
"Get the initial values of the hyperparameters of the posterior "
"distribution."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ":py:obj:`get_hn_params <bayesml.normal.LearnModel.get_hn_params>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_hn_params:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Get the hyperparameters of the posterior distribution."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ":py:obj:`get_p_params <bayesml.normal.LearnModel.get_p_params>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_p_params:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Get the parameters of the predictive distribution."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`load_h0_params <bayesml.normal.LearnModel.load_h0_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Load the hyperparameters to h0_params."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`load_hn_params <bayesml.normal.LearnModel.load_hn_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Load the hyperparameters to hn_params."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`make_prediction <bayesml.normal.LearnModel.make_prediction>`\\ "
"\\(\\[loss\\]\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.make_prediction:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Predict a new data point under the given criterion."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`overwrite_h0_params "
"<bayesml.normal.LearnModel.overwrite_h0_params>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
"Overwrite the initial values of the hyperparameters of the posterior "
"distribution by the learned values."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`pred_and_update <bayesml.normal.LearnModel.pred_and_update>`\\ "
"\\(x\\[\\, loss\\]\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.pred_and_update:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Predict a new data point and update the posterior sequentially."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ":py:obj:`predict <bayesml.normal.LearnModel.predict>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.predict:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Predict the next data point."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`reset_hn_params <bayesml.normal.LearnModel.reset_hn_params>`\\ "
"\\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
"Reset the hyperparameters of the posterior distribution to their initial "
"values."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`save_h0_params <bayesml.normal.LearnModel.save_h0_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`save_hn_params <bayesml.normal.LearnModel.save_hn_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`set_h0_params <bayesml.normal.LearnModel.set_h0_params>`\\ "
"\\(\\[h0\\_m\\, h0\\_kappa\\, h0\\_alpha\\, ...\\]\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`set_hn_params <bayesml.normal.LearnModel.set_hn_params>`\\ "
"\\(\\[hn\\_m\\, hn\\_kappa\\, hn\\_alpha\\, ...\\]\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.set_hn_params:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Set updated values of the hyperparameter of the posterior distribution."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`update_posterior <bayesml.normal.LearnModel.update_posterior>`\\"
" \\(x\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.update_posterior:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
"Update the hyperparameters of the posterior distribution using traning "
"data."
msgstr ""

#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid ""
":py:obj:`visualize_posterior "
"<bayesml.normal.LearnModel.visualize_posterior>`\\ \\(\\)"
msgstr ""

#: bayesml.normal._normal.LearnModel.visualize_posterior:2
#: bayesml.normal._normal.LearnModel:81:<autosummary>:1 of
msgid "Visualize the posterior distribution for the parameter."
msgstr ""

#: bayesml.normal._normal.LearnModel.get_h0_params:10 of
msgid "**h0_params**"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_h0_params:11 of
msgid "``\"h0_m\"`` : The value of ``self.h0_m``"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_h0_params:12 of
msgid "``\"h0_kappa\"`` : The value of ``self.h0_kappa``"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_h0_params:13 of
msgid "``\"h0_alpha\"`` : The value of ``self.h0_alpha``"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_h0_params:14 of
msgid "``\"h0_beta\"`` : The value of ``self.h0_beta``"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_hn_params:10 of
msgid "**hn_params**"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_hn_params:11 of
msgid "``\"hn_m\"`` : The value of ``self.hn_m``"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_hn_params:12 of
msgid "``\"hn_kappa\"`` : The value of ``self.hn_kappa``"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_hn_params:13 of
msgid "``\"hn_alpha\"`` : The value of ``self.hn_alpha``"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_hn_params:14 of
msgid "``\"hn_beta\"`` : The value of ``self.hn_beta``"
msgstr ""

#: bayesml.normal._normal.LearnModel.fit:-1
#: bayesml.normal._normal.LearnModel.update_posterior:-1 of
msgid "numpy.ndarray"
msgstr ""

#: bayesml.normal._normal.LearnModel.update_posterior:8 of
msgid "Real numbers."
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:4 of
msgid ""
"Note that the criterion is applied to estimating ``mu`` and ``tau`` "
"independently. Therefore, a tuple of the student's t-distribution and the"
" gamma distribution will be returned when loss=\"KL\""
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:9
#: bayesml.normal._normal.LearnModel.make_prediction:7
#: bayesml.normal._normal.LearnModel.pred_and_update:10 of
msgid "**loss**"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:-1
#: bayesml.normal._normal.LearnModel.make_prediction:-1
#: bayesml.normal._normal.LearnModel.pred_and_update:-1 of
msgid "str, optional"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:10
#: bayesml.normal._normal.LearnModel.make_prediction:8
#: bayesml.normal._normal.LearnModel.pred_and_update:11 of
msgid ""
"Loss function underlying the Bayes risk function, by default \"squared\"."
" This function supports \"squared\", \"0-1\", \"abs\", and \"KL\"."
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:13 of
msgid "**dict_out**"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:-1 of
msgid "bool, optional"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:14 of
msgid "If ``True``, output will be a dict, by default ``False``."
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:20 of
msgid "**estimates**"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:-1 of
#, python-brace-format
msgid "tuple of {float, None, or rv_frozen}"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:21 of
msgid "``mu_hat`` : the estimate for mu"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:22 of
msgid "``tau_hat`` : the estimate for tau"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:23 of
msgid ""
"The estimated values under the given loss function. If it is not exist, "
"`None` will be returned. If the loss function is \"KL\", the posterior "
"distribution itself will be returned as rv_frozen object of scipy.stats."
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:36
#: bayesml.normal._normal.LearnModel.make_prediction:29
#: bayesml.normal._normal.LearnModel.pred_and_update:32 of
msgid ":obj:`scipy.stats.rv_continuous`"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_params:38
#: bayesml.normal._normal.LearnModel.make_prediction:31
#: bayesml.normal._normal.LearnModel.pred_and_update:34 of
msgid ":obj:`scipy.stats.rv_discrete`"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_interval:7 of
msgid "**credibility**"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_interval:8 of
msgid ""
"A posterior probability that the interval conitans the paramter, by "
"default 0.95"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_interval:14 of
msgid "(mu_lower, mu_upper),(tau_lower, tau_upper): float"
msgstr ""

#: bayesml.normal._normal.LearnModel.estimate_interval:15 of
msgid "The lower and the upper bounds of the intervals"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_p_params:10 of
msgid "**p_params**"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_p_params:11 of
msgid "``\"p_mu\"`` : The value of ``self.p_mu``"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_p_params:12 of
msgid "``\"p_lambda\"`` : The value of ``self.p_lambda``"
msgstr ""

#: bayesml.normal._normal.LearnModel.get_p_params:13 of
msgid "``\"p_nu\"`` : The value of ``self.p_nu``"
msgstr ""

#: bayesml.normal._normal.LearnModel.make_prediction:15
#: bayesml.normal._normal.LearnModel.pred_and_update:18 of
msgid "**Predicted_value**"
msgstr ""

#: bayesml.normal._normal.LearnModel.make_prediction:-1
#: bayesml.normal._normal.LearnModel.pred_and_update:-1 of
#, python-brace-format
msgid "{float, rv_frozen}"
msgstr ""

#: bayesml.normal._normal.LearnModel.make_prediction:16
#: bayesml.normal._normal.LearnModel.pred_and_update:19 of
msgid ""
"The predicted value under the given loss function.  If the loss function "
"is \"KL\", the posterior distribution itself will be returned as "
"rv_frozen object of scipy.stats."
msgstr ""

#: bayesml.normal._normal.LearnModel.pred_and_update:8 of
msgid "A real number"
msgstr ""

#: bayesml.normal._normal.LearnModel.calc_log_marginal_likelihood:10 of
msgid "**log_marginal_likelihood**"
msgstr ""

#: bayesml.normal._normal.LearnModel.calc_log_marginal_likelihood:11 of
msgid "The log marginal likelihood."
msgstr ""

#: bayesml.normal._normal.LearnModel.calc_pred_var:10 of
msgid "**var**"
msgstr ""

#: bayesml.normal._normal.LearnModel.calc_pred_var:11 of
msgid "The variance of the predictive distribution."
msgstr ""

#: bayesml.normal._normal.LearnModel.fit:4
#: bayesml.normal._normal.LearnModel.predict:4 of
msgid "This function is a wrapper of the following functions:"
msgstr ""

#: bayesml.normal._normal.LearnModel.fit:13 of
msgid "All the elements must be real numbers."
msgstr ""

#: bayesml.normal._normal.LearnModel.fit:19 of
msgid "**self**"
msgstr ""

#: bayesml.normal._normal.LearnModel.fit:-1 of
msgid "LearnModel"
msgstr ""

#: bayesml.normal._normal.LearnModel.fit:20 of
msgid "The fitted model."
msgstr ""

#: bayesml.normal._normal.LearnModel.predict:14 of
msgid "**predicted_value**"
msgstr ""

#: bayesml.normal._normal.LearnModel.predict:15 of
msgid "The predicted value under the squared loss function."
msgstr ""

