# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, BayesML Developers
# This file is distributed under the same license as the BayesML package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BayesML \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-21 23:58+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../bayesml.exponential.rst:2
msgid "bayesml.exponential package"
msgstr ""

#: ../../bayesml.exponential.rst:7
msgid "Module contents"
msgstr ""

#: bayesml.exponential:1 of
msgid "The exponential distribution with the gamma prior distribution."
msgstr ""

#: bayesml.exponential:3 of
msgid "The stochastic data generative model is as follows:"
msgstr ""

#: bayesml.exponential:5 of
#, python-brace-format
msgid ":math:`x \\in \\mathbb{R}_{\\geq 0}`: a data point"
msgstr ""

#: bayesml.exponential:6 of
#, python-brace-format
msgid ":math:`\\lambda \\in \\mathbb{R}_{>0}`: a parameter"
msgstr ""

#: bayesml.exponential:8 of
#, python-brace-format
msgid ""
"p(x | \\lambda) = \\mathrm{Exp}(x|\\lambda) = \\lambda\\exp(-\\lambda x)."
"\n"
"\n"
msgstr ""

#: bayesml.exponential:11 of
#, python-brace-format
msgid ""
"\\mathbb{E}[x] &= \\frac{1}{\\lambda}, \\\\\n"
"\\mathbb{V}[x] &= \\frac{1}{\\lambda^2}.\n"
"\n"
msgstr ""

#: bayesml.exponential:16 of
msgid "The prior distribution is as follows:"
msgstr ""

#: bayesml.exponential:18 of
#, python-brace-format
msgid ":math:`\\alpha_0 \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.exponential:19 of
#, python-brace-format
msgid ":math:`\\beta_0 \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.exponential:20 of
#, python-brace-format
msgid ""
":math:`\\Gamma(\\cdot): \\mathbb{R}_{>0} \\to \\mathbb{R}_{>0}`: the "
"Gamma function"
msgstr ""

#: bayesml.exponential:22 of
msgid ""
"p(\\lambda) = \\mathrm{Gam}(\\lambda|\\alpha_0,\\beta_0) = "
"\\frac{\\beta_0^{\\alpha_0}}{\\Gamma (\\alpha_0)} \\lambda^{\\alpha_0 - "
"1} \\exp \\{ -\\beta_0 \\lambda \\},\n"
"\n"
msgstr ""

#: bayesml.exponential:25 of
#, python-brace-format
msgid ""
"\\mathbb{E}[\\lambda] &= \\frac{\\alpha_0}{\\beta_0}, \\\\\n"
"\\mathbb{V}[\\lambda] &= \\frac{\\alpha_0}{\\beta_0^2}.\n"
"\n"
msgstr ""

#: bayesml.exponential:30 of
msgid "The posterior distribution is as follows:"
msgstr ""

#: bayesml.exponential:32 of
#, python-brace-format
msgid ""
":math:`x^n = (x_1, x_2, \\dots , x_n) \\in \\mathbb{R}_{\\geq 0}^n`: "
"given data"
msgstr ""

#: bayesml.exponential:33 of
#, python-brace-format
msgid ":math:`\\alpha_n \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.exponential:34 of
#, python-brace-format
msgid ":math:`\\beta_n \\in \\mathbb{R}_{>0}`: a hyperparameter"
msgstr ""

#: bayesml.exponential:36 of
msgid ""
"p(\\lambda | x^n) = \\mathrm{Gam}(\\lambda|\\alpha_n,\\beta_n) = "
"\\frac{\\beta_n^{\\alpha_n}}{\\Gamma (\\alpha_n)} \\lambda^{\\alpha_n - "
"1} \\exp \\{ -\\beta_n \\lambda \\},\n"
"\n"
msgstr ""

#: bayesml.exponential:39 of
#, python-brace-format
msgid ""
"\\mathbb{E}[\\lambda | x^n] &= \\frac{\\alpha_n}{\\beta_n}, \\\\\n"
"\\mathbb{V}[\\lambda | x^n] &= \\frac{\\alpha_n}{\\beta_n^2},\n"
"\n"
msgstr ""

#: bayesml.exponential:43 of
msgid "where the updating rule of the hyperparameters is"
msgstr ""

#: bayesml.exponential:45 of
#, python-brace-format
msgid ""
"\\alpha_n &= \\alpha_0 + n,\\\\\n"
"\\beta_n &= \\beta_0 + \\sum_{i=1}^n x_i.\n"
"\n"
msgstr ""

#: bayesml.exponential:50 of
msgid "The predictive distribution is as follows:"
msgstr ""

#: bayesml.exponential:52 of
#, python-brace-format
msgid ":math:`x_{n+1} \\in \\mathbb{R}_{\\geq 0}`: a new data point"
msgstr ""

#: bayesml.exponential:53 of
#, python-brace-format
msgid ""
":math:`\\kappa_\\mathrm{p} \\in \\mathbb{R}_{>0}`: the hyperparameter of "
"the posterior"
msgstr ""

#: bayesml.exponential:54 of
#, python-brace-format
msgid ""
":math:`\\lambda_\\mathrm{p} \\in \\mathbb{R}_{>0}`: the hyperparameter of"
" the posterior"
msgstr ""

#: bayesml.exponential:56 of
msgid ""
"p(x_{n+1}|x^n)=\\mathrm{Lomax}(x_{n+1}|\\kappa_\\mathrm{p},\\lambda_\\mathrm{p})"
" = "
"\\frac{\\kappa_\\mathrm{p}}{\\lambda_\\mathrm{p}}\\left(1+\\frac{x_{n+1}}{\\lambda_\\mathrm{p}}\\right)^{-(\\kappa_\\mathrm{p}+1)},"
"\n"
"\n"
msgstr ""

#: bayesml.exponential:59 of
msgid ""
"\\mathbb{E}[x_{n+1} | x^n] &=\n"
"\\begin{cases}\n"
"\\frac{\\lambda_\\mathrm{p}}{\\kappa_\\mathrm{p}-1}, & "
"\\kappa_\\mathrm{p}>1,\\\\\n"
"\\mathrm{undefined}, & \\text{otherwise},\n"
"\\end{cases}\\\\\n"
"\\mathbb{V}[x_{n+1} | x^n] &=\n"
"\\begin{cases}\n"
"\\frac{\\lambda_\\mathrm{p}^2 "
"\\kappa_\\mathrm{p}}{(\\kappa_\\mathrm{p}-1)^2(\\kappa_\\mathrm{p}-2)}, &"
" \\kappa_\\mathrm{p}>2,\\\\\n"
"\\infty, & 1<\\kappa_\\mathrm{p}\\leq 2,\\\\\n"
"\\mathrm{undefined}, & \\text{otherwise},\n"
"\\end{cases}\n"
"\n"
msgstr ""

#: bayesml.exponential:72 of
msgid ""
"where the parameters are obtained from the hyperparameters of the "
"posterior distribution as follows:"
msgstr ""

#: bayesml.exponential:74 of
#, python-brace-format
msgid ""
"&\\kappa_\\mathrm{p} = \\alpha_n, \\\\\n"
"&\\lambda_\\mathrm{p} = \\beta_n.\n"
"\n"
msgstr ""

#: bayesml.exponential._exponential.GenModel:1 of
msgid "Bases: :py:class:`~bayesml.base.Generative`"
msgstr ""

#: bayesml.exponential._exponential.GenModel:2 of
msgid "The stochastic data generative model and the prior distribution."
msgstr ""

#: bayesml.exponential._exponential.GenModel
#: bayesml.exponential._exponential.GenModel.gen_sample
#: bayesml.exponential._exponential.GenModel.save_sample
#: bayesml.exponential._exponential.GenModel.set_h_params
#: bayesml.exponential._exponential.GenModel.set_params
#: bayesml.exponential._exponential.GenModel.visualize_model
#: bayesml.exponential._exponential.LearnModel
#: bayesml.exponential._exponential.LearnModel.estimate_interval
#: bayesml.exponential._exponential.LearnModel.estimate_params
#: bayesml.exponential._exponential.LearnModel.fit
#: bayesml.exponential._exponential.LearnModel.make_prediction
#: bayesml.exponential._exponential.LearnModel.pred_and_update
#: bayesml.exponential._exponential.LearnModel.set_h0_params
#: bayesml.exponential._exponential.LearnModel.set_hn_params
#: bayesml.exponential._exponential.LearnModel.update_posterior of
msgid "Parameters"
msgstr ""

#: bayesml.exponential._exponential.GenModel:7
#: bayesml.exponential._exponential.GenModel.set_params:7 of
msgid "**lambda_**"
msgstr ""

#: bayesml.exponential._exponential.GenModel:-1
#: bayesml.exponential._exponential.GenModel.set_h_params:-1
#: bayesml.exponential._exponential.GenModel.set_params:-1
#: bayesml.exponential._exponential.GenModel.visualize_model:-1
#: bayesml.exponential._exponential.LearnModel:-1
#: bayesml.exponential._exponential.LearnModel.estimate_interval:-1
#: bayesml.exponential._exponential.LearnModel.set_h0_params:-1
#: bayesml.exponential._exponential.LearnModel.set_hn_params:-1 of
msgid "float, optional"
msgstr ""

#: bayesml.exponential._exponential.GenModel:8
#: bayesml.exponential._exponential.GenModel:11
#: bayesml.exponential._exponential.GenModel:14
#: bayesml.exponential._exponential.LearnModel:8
#: bayesml.exponential._exponential.LearnModel:11 of
msgid "a positive real number, by default 1.0."
msgstr ""

#: bayesml.exponential._exponential.GenModel:10
#: bayesml.exponential._exponential.GenModel.set_h_params:7 of
msgid "**h_alpha**"
msgstr ""

#: bayesml.exponential._exponential.GenModel:13
#: bayesml.exponential._exponential.GenModel.set_h_params:10 of
msgid "**h_beta**"
msgstr ""

#: bayesml.exponential._exponential.GenModel:16 of
msgid "**seed**"
msgstr ""

#: bayesml.exponential._exponential.GenModel:-1 of
#, python-brace-format
msgid "{None, int}, optional"
msgstr ""

#: bayesml.exponential._exponential.GenModel:17 of
msgid "A seed to initialize numpy.random.default_rng(), by default None"
msgstr ""

#: bayesml.exponential._exponential.GenModel:22
#: bayesml.exponential._exponential.LearnModel:28 of
msgid "Methods"
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ":py:obj:`gen_params <bayesml.exponential.GenModel.gen_params>`\\ \\(\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_params:2
#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Generate the parameter from the prior distribution."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`gen_sample <bayesml.exponential.GenModel.gen_sample>`\\ "
"\\(sample\\_size\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_sample:2
#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Generate a sample from the stochastic data generative model."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`get_constants <bayesml.exponential.GenModel.get_constants>`\\ "
"\\(\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_constants:2
#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Get constants of GenModel."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`get_h_params <bayesml.exponential.GenModel.get_h_params>`\\ "
"\\(\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_h_params:2
#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Get the hyperparameters of the prior distribution."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ":py:obj:`get_params <bayesml.exponential.GenModel.get_params>`\\ \\(\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_params:2
#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Get the parameter of the sthocastic data generative model."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`load_h_params <bayesml.exponential.GenModel.load_h_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Load the hyperparameters to h_params."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`load_params <bayesml.exponential.GenModel.load_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Load the parameters saved by ``save_params``."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`save_h_params <bayesml.exponential.GenModel.save_h_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Save the hyperparameters using python ``pickle`` module."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`save_params <bayesml.exponential.GenModel.save_params>`\\ "
"\\(filename\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Save the parameters using python ``pickle`` module."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`save_sample <bayesml.exponential.GenModel.save_sample>`\\ "
"\\(filename\\, sample\\_size\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel.save_sample:2
#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Save the generated sample as NumPy ``.npz`` format."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`set_h_params <bayesml.exponential.GenModel.set_h_params>`\\ "
"\\(\\[h\\_alpha\\, h\\_beta\\]\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel.set_h_params:2
#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Set the hyperparameters of the prior distribution."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`set_params <bayesml.exponential.GenModel.set_params>`\\ "
"\\(\\[lambda\\_\\]\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel.set_params:2
#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Set the parameter of the sthocastic data generative model."
msgstr ""

#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid ""
":py:obj:`visualize_model "
"<bayesml.exponential.GenModel.visualize_model>`\\ \\(\\[sample\\_size\\, "
"hist\\_bins\\]\\)"
msgstr ""

#: bayesml.exponential._exponential.GenModel.visualize_model:2
#: bayesml.exponential._exponential.GenModel:50:<autosummary>:1 of
msgid "Visualize the stochastic data generative model and generated samples."
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_constants:4
#: bayesml.exponential._exponential.LearnModel.get_constants:4 of
#, python-brace-format
msgid ""
"This model does not have any constants.  Therefore, this function returns"
" an emtpy dict ``{}``."
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_sample
#: bayesml.exponential._exponential.GenModel.get_constants
#: bayesml.exponential._exponential.GenModel.get_h_params
#: bayesml.exponential._exponential.GenModel.get_params
#: bayesml.exponential._exponential.LearnModel.calc_log_marginal_likelihood
#: bayesml.exponential._exponential.LearnModel.estimate_interval
#: bayesml.exponential._exponential.LearnModel.estimate_params
#: bayesml.exponential._exponential.LearnModel.fit
#: bayesml.exponential._exponential.LearnModel.get_constants
#: bayesml.exponential._exponential.LearnModel.get_h0_params
#: bayesml.exponential._exponential.LearnModel.get_hn_params
#: bayesml.exponential._exponential.LearnModel.get_p_params
#: bayesml.exponential._exponential.LearnModel.make_prediction
#: bayesml.exponential._exponential.LearnModel.pred_and_update
#: bayesml.exponential._exponential.LearnModel.predict of
msgid "Returns"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_constants:12
#: bayesml.exponential._exponential.LearnModel.get_constants:12 of
msgid "**constants**"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_constants:-1
#: bayesml.exponential._exponential.LearnModel.get_constants:-1 of
msgid "an empty dict"
msgstr ""

#: bayesml.exponential._exponential.GenModel.set_h_params:8
#: bayesml.exponential._exponential.GenModel.set_h_params:11
#: bayesml.exponential._exponential.GenModel.set_params:8
#: bayesml.exponential._exponential.LearnModel.set_h0_params:8
#: bayesml.exponential._exponential.LearnModel.set_h0_params:11
#: bayesml.exponential._exponential.LearnModel.set_hn_params:8
#: bayesml.exponential._exponential.LearnModel.set_hn_params:11 of
msgid "a positive real number, by default None."
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_h_params:10 of
msgid "**h_params**"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_h_params:-1
#: bayesml.exponential._exponential.LearnModel.get_h0_params:-1
#: bayesml.exponential._exponential.LearnModel.get_hn_params:-1
#: bayesml.exponential._exponential.LearnModel.get_p_params:-1 of
#, python-brace-format
msgid "dict of {str: float}"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_h_params:11 of
msgid "``\"h_alpha\"`` : The value of ``self.h_alpha``"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_h_params:12 of
msgid "``\"h_beta\"`` : The value of ``self.h_beta``"
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_params:4 of
msgid "The generated vaule is set at ``self.lambda_``."
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_params:10 of
msgid "**params**"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_params:-1 of
#, python-brace-format
msgid "dict of {str:float}"
msgstr ""

#: bayesml.exponential._exponential.GenModel.get_params:11 of
msgid "``\"lambda_\"`` : The value of ``self.lambda_``."
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_sample:7
#: bayesml.exponential._exponential.GenModel.save_sample:12
#: bayesml.exponential._exponential.GenModel.visualize_model:7 of
msgid "**sample_size**"
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_sample:-1
#: bayesml.exponential._exponential.GenModel.save_sample:-1 of
msgid "int"
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_sample:8
#: bayesml.exponential._exponential.GenModel.save_sample:13 of
msgid "A positive integer"
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_sample:14
#: bayesml.exponential._exponential.LearnModel.fit:12
#: bayesml.exponential._exponential.LearnModel.pred_and_update:7
#: bayesml.exponential._exponential.LearnModel.update_posterior:7 of
msgid "**x**"
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_sample:-1 of
msgid "numpy ndarray"
msgstr ""

#: bayesml.exponential._exponential.GenModel.gen_sample:15 of
msgid ""
"1 dimensional array whose size is ``sammple_size`` and elements are "
"positive real numbers."
msgstr ""

#: bayesml.exponential._exponential.GenModel.save_sample:4 of
msgid "It is saved as aNpzFile with keyword: \"x\"."
msgstr ""

#: bayesml.exponential._exponential.GenModel.save_sample:8 of
msgid "**filename**"
msgstr ""

#: bayesml.exponential._exponential.GenModel.save_sample:-1 of
msgid "str"
msgstr ""

#: bayesml.exponential._exponential.GenModel.save_sample:9 of
msgid ""
"The filename to which the sample is saved. ``.npz`` will be appended if "
"it isn't there."
msgstr ""

#: bayesml.exponential._exponential.GenModel.save_sample:27 of
msgid ":obj:`numpy.savez_compressed`"
msgstr ""

#: bayesml.exponential._exponential.GenModel.visualize_model:-1 of
msgid "int, optional"
msgstr ""

#: bayesml.exponential._exponential.GenModel.visualize_model:8 of
msgid "A positive integer, by default 100."
msgstr ""

#: bayesml.exponential._exponential.GenModel.visualize_model:10 of
msgid "**hist_bins**"
msgstr ""

#: bayesml.exponential._exponential.GenModel.visualize_model:11 of
msgid "A positive float, by default 10."
msgstr ""

#: bayesml.exponential._exponential.GenModel.visualize_model:26
#: bayesml.exponential._exponential.LearnModel.visualize_posterior:19 of
msgid "Examples"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:1 of
msgid ""
"Bases: :py:class:`~bayesml.base.Posterior`, "
":py:class:`~bayesml.base.PredictiveMixin`"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:2 of
msgid "The posterior distribution and the predictive distribution."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:7
#: bayesml.exponential._exponential.LearnModel.set_h0_params:7 of
msgid "**h0_alpha**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:10
#: bayesml.exponential._exponential.LearnModel.set_h0_params:10 of
msgid "**h0_beta**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel of
msgid "Attributes"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:15
#: bayesml.exponential._exponential.LearnModel.set_hn_params:7 of
msgid "**hn_alpha**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:-1
#: bayesml.exponential._exponential.LearnModel.calc_log_marginal_likelihood:-1
#: bayesml.exponential._exponential.LearnModel.pred_and_update:-1 of
msgid "float"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:16
#: bayesml.exponential._exponential.LearnModel:19
#: bayesml.exponential._exponential.LearnModel:22
#: bayesml.exponential._exponential.LearnModel:25
#: bayesml.exponential._exponential.LearnModel.pred_and_update:8 of
msgid "a positive real number"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:18
#: bayesml.exponential._exponential.LearnModel.set_hn_params:10 of
msgid "**hn_beta**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:21 of
msgid "**p_kappa**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:24 of
msgid "**p_lambda**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`calc_log_marginal_likelihood "
"<bayesml.exponential.LearnModel.calc_log_marginal_likelihood>`\\ \\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.calc_log_marginal_likelihood:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Calculate log marginal likelihood"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`calc_pred_dist "
"<bayesml.exponential.LearnModel.calc_pred_dist>`\\ \\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.calc_pred_dist:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Calculate the parameters of the predictive distribution."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`estimate_interval "
"<bayesml.exponential.LearnModel.estimate_interval>`\\ "
"\\(\\[credibility\\]\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_interval:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Credible interval of the parameter."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`estimate_params "
"<bayesml.exponential.LearnModel.estimate_params>`\\ \\(\\[loss\\, "
"dict\\_out\\]\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
"Estimate the parameter of the stochastic data generative model under the "
"given criterion."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ":py:obj:`fit <bayesml.exponential.LearnModel.fit>`\\ \\(x\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.fit:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Fit the model to the data."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`get_constants <bayesml.exponential.LearnModel.get_constants>`\\ "
"\\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_constants:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Get constants of LearnModel."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`get_h0_params <bayesml.exponential.LearnModel.get_h0_params>`\\ "
"\\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_h0_params:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
"Get the initial values of the hyperparameters of the posterior "
"distribution."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`get_hn_params <bayesml.exponential.LearnModel.get_hn_params>`\\ "
"\\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_hn_params:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Get the hyperparameters of the posterior distribution."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`get_p_params <bayesml.exponential.LearnModel.get_p_params>`\\ "
"\\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_p_params:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Get the parameters of the predictive distribution."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`load_h0_params "
"<bayesml.exponential.LearnModel.load_h0_params>`\\ \\(filename\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Load the hyperparameters to h0_params."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`load_hn_params "
"<bayesml.exponential.LearnModel.load_hn_params>`\\ \\(filename\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Load the hyperparameters to hn_params."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`make_prediction "
"<bayesml.exponential.LearnModel.make_prediction>`\\ \\(\\[loss\\]\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.make_prediction:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Predict a new data point under the given criterion."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`overwrite_h0_params "
"<bayesml.exponential.LearnModel.overwrite_h0_params>`\\ \\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
"Overwrite the initial values of the hyperparameters of the posterior "
"distribution by the learned values."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`pred_and_update "
"<bayesml.exponential.LearnModel.pred_and_update>`\\ \\(x\\[\\, loss\\]\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.pred_and_update:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Predict a new data point and update the posterior sequentially."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ":py:obj:`predict <bayesml.exponential.LearnModel.predict>`\\ \\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.predict:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Predict the next data point."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`reset_hn_params "
"<bayesml.exponential.LearnModel.reset_hn_params>`\\ \\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
"Reset the hyperparameters of the posterior distribution to their initial "
"values."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`save_h0_params "
"<bayesml.exponential.LearnModel.save_h0_params>`\\ \\(filename\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`save_hn_params "
"<bayesml.exponential.LearnModel.save_hn_params>`\\ \\(filename\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`set_h0_params <bayesml.exponential.LearnModel.set_h0_params>`\\ "
"\\(\\[h0\\_alpha\\, h0\\_beta\\]\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.set_h0_params:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Set initial values of the hyperparameter of the posterior distribution."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`set_hn_params <bayesml.exponential.LearnModel.set_hn_params>`\\ "
"\\(\\[hn\\_alpha\\, hn\\_beta\\]\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.set_hn_params:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Set updated values of the hyperparameter of the posterior distribution."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`update_posterior "
"<bayesml.exponential.LearnModel.update_posterior>`\\ \\(x\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.update_posterior:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
"Update the hyperparameters of the posterior distribution using traning "
"data."
msgstr ""

#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid ""
":py:obj:`visualize_posterior "
"<bayesml.exponential.LearnModel.visualize_posterior>`\\ \\(\\)"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.visualize_posterior:2
#: bayesml.exponential._exponential.LearnModel:65:<autosummary>:1 of
msgid "Visualize the posterior distribution for the parameter."
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_h0_params:10 of
msgid "**h0_params**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_h0_params:11 of
msgid "``\"h0_alpha\"`` : The value of ``self.h0_alpha``"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_h0_params:12 of
msgid "``\"h0_beta\"`` : The value of ``self.h0_beta``"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_hn_params:10 of
msgid "**hn_params**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_hn_params:11 of
msgid "``\"hn_alpha\"`` : The value of ``self.hn_alpha``"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_hn_params:12 of
msgid "``\"hn_beta\"`` : The value of ``self.hn_beta``"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.fit:-1
#: bayesml.exponential._exponential.LearnModel.update_posterior:-1 of
msgid "numpy.ndarray"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.fit:13
#: bayesml.exponential._exponential.LearnModel.update_posterior:8 of
msgid "All the elements must be positive real numbers."
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:7
#: bayesml.exponential._exponential.LearnModel.make_prediction:7
#: bayesml.exponential._exponential.LearnModel.pred_and_update:10 of
msgid "**loss**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:-1
#: bayesml.exponential._exponential.LearnModel.make_prediction:-1
#: bayesml.exponential._exponential.LearnModel.pred_and_update:-1 of
msgid "str, optional"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:8
#: bayesml.exponential._exponential.LearnModel.make_prediction:8
#: bayesml.exponential._exponential.LearnModel.pred_and_update:11 of
msgid ""
"Loss function underlying the Bayes risk function, by default \"squared\"."
" This function supports \"squared\", \"0-1\", \"abs\", and \"KL\"."
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:11 of
msgid "**dict_out**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:-1 of
msgid "bool, optional"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:12 of
msgid "If ``True``, output will be a dict, by default ``False``."
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:18 of
msgid "**estimator**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:-1 of
#, python-brace-format
msgid "{float, None, rv_frozen}"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:19 of
msgid ""
"The estimated values under the given loss function. If it is not exist, "
"`None` will be returned. If the loss function is \"KL\", the posterior "
"distribution itself will be returned as rv_frozen object of scipy.stats."
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:32
#: bayesml.exponential._exponential.LearnModel.make_prediction:29
#: bayesml.exponential._exponential.LearnModel.pred_and_update:32 of
msgid ":obj:`scipy.stats.rv_continuous`"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_params:34
#: bayesml.exponential._exponential.LearnModel.make_prediction:31
#: bayesml.exponential._exponential.LearnModel.pred_and_update:34 of
msgid ":obj:`scipy.stats.rv_discrete`"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_interval:7 of
msgid "**credibility**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_interval:8 of
msgid ""
"A posterior probability that the interval conitans the paramter, by "
"default 0.95."
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_interval:14 of
msgid "lower, upper: float"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.estimate_interval:15 of
msgid "The lower and the upper bound of the interval"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_p_params:10 of
msgid "**p_params**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_p_params:11 of
msgid "``\"p_kappa\"`` : The value of ``self.p_kappa``"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.get_p_params:12 of
msgid "``\"p_lambda\"`` : The value of ``self.p_lambda``"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.make_prediction:15
#: bayesml.exponential._exponential.LearnModel.pred_and_update:18 of
msgid "**Predicted_value**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.make_prediction:-1
#: bayesml.exponential._exponential.LearnModel.pred_and_update:-1 of
#, python-brace-format
msgid "{float,None,rv_frozen}"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.make_prediction:16
#: bayesml.exponential._exponential.LearnModel.pred_and_update:19 of
msgid ""
"The predicted value under the given loss function.  If the loss function "
"is \"KL\", the posterior distribution itself will be returned as "
"rv_frozen object of scipy.stats."
msgstr ""

#: bayesml.exponential._exponential.LearnModel.calc_log_marginal_likelihood:10
#: of
msgid "**log_marginal_likelihood**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.calc_log_marginal_likelihood:11
#: of
msgid "The log marginal likelihood."
msgstr ""

#: bayesml.exponential._exponential.LearnModel.fit:4
#: bayesml.exponential._exponential.LearnModel.predict:4 of
msgid "This function is a wrapper of the following functions:"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.fit:19 of
msgid "**self**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.fit:-1 of
msgid "LearnModel"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.fit:20 of
msgid "The fitted model."
msgstr ""

#: bayesml.exponential._exponential.LearnModel.predict:14 of
msgid "**predicted_value**"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.predict:-1 of
#, python-brace-format
msgid "{float,None}"
msgstr ""

#: bayesml.exponential._exponential.LearnModel.predict:15 of
msgid "The predicted value under the squared loss function."
msgstr ""

